ifeq ($(CONFIG_BACKPORT_INTEGRATE),)
# Since 2.6.21, try-run is available, but cc-disable-warning
# was only added later, so we add it here ourselves:
backport-cc-disable-warning = $(call try-run,\
	$(CC) $(KBUILD_CPPFLAGS) $(KBUILD_CFLAGS) -W$(strip $(1)) -c -x c /dev/null -o "$$TMP",-Wno-$(strip $(1)))

NOSTDINC_FLAGS := \
	-I$(M)/backport-include \
	-I$(M)/backport-include/uapi \
	$(call backport-cc-disable-warning, unused-but-set-variable) \
	-DCPTCFG_BACKPORTS_RELEASE_TAG=\"$(BACKPORTS_RELEASE_TAG)\" \
	-DCPTCFG_DII_KERNEL_HEAD=\"$(DII_KERNEL_HEAD)\" \
	-DCPTCFG_BASE_KERNEL_NAME=\"$(BASE_KERNEL_NAME)\" \
	-DCPTCFG_DII_KERNEL_TAG=\"$(DII_KERNEL_TAG)\" \
	-DCPTCFG_MODULE_I915=\"$(MODULE_I915)\" \
	$(BACKPORTS_GIT_TRACKER_DEF) \

ifneq ("$(CPTCFG_BUILD_I915)", "y")
NOSTDINC_FLAGS += \
	-I$(M)/i915-include \
	-I$(M)/drm-include \
	-I$(M)/i915-include/uapi \
	-I$(M)/drm-include/uapi \
	-include $(M)/backport-include/backport/backport.h \
	$(CFLAGS)
else
NOSTDINC_FLAGS += \
	-I$(M)/i915-include \
	-I$(M)/i915-include/uapi \
	-include $(M)/backport-include/backport/backport.h \
	$(CFLAGS)
endif

export backport_srctree = $(M)
else
export BACKPORT_DIR = backports/
export backport_srctree = $(BACKPORT_DIR)
NOSTDINC_FLAGS := \
	-I$(BACKPORT_DIR)/backport-include/ \
	-I$(BACKPORT_DIR)/backport-include/uapi \
	-I$(BACKPORT_DIR)/include/ \
	-I$(BACKPORT_DIR)/include/drm \
	-I$(BACKPORT_DIR)/include/uapi \
	-include $(BACKPORT_DIR)/backport-include/backport/backport.h \
	$(CFLAGS)
endif


obj-y += compat/

ifeq (y,$(filter y,$(CPTCFG_BUILD_DMABUF) $(CPTCFG_BUILD_ALL_MODULES)))
obj-y += drivers/dma-buf/
endif

# Disable vfio for RHEL < RHEL9.2, SLES < SLES15SP5, and KV < 5.16

# Get RHEL release version
ifneq ($(RHEL_RELEASE_VERSION),)
get_release_version = $(strip $(shell expr $(1) \* 256 + $(2)))
disable_vfio_backport = $(strip $(shell expr $(RHEL_RELEASE_VERSION) \< $(call get_release_version,9,2)))
else ifneq ($(SUSE_PRODUCT_CODE),)
# Get sles product code
get_sles_product_code = $(strip $(shell expr $(1) \* 16777216 + $(2) \* 65536 + $(3) \* 256 + $(4)))
disable_vfio_backport = $(strip $(shell expr $(SUSE_PRODUCT_CODE) \< $(call get_sles_product_code,1,15,5,0)))
# Get linux version code
else ifneq ($(LINUX_VERSION_CODE),)
get_linux_version_code = $(strip $(shell expr $(1) \* 65536 + $(2) \* 256 + $(3)))
disable_vfio_backport = $(strip $(shell expr $(LINUX_VERSION_CODE) \< $(call get_linux_version_code,5,16,0)))
endif

ifeq (y,$(filter y,$(CPTCFG_BUILD_DRM) $(CPTCFG_BUILD_ALL_MODULES) $(CPTCFG_BUILD_I915)))
ifeq ("$(CPTCFG_BUILD_I915)", "y")
obj-$(CPTCFG_DRM_I915) += drivers/gpu/drm/i915/
ifneq (1,$(disable_vfio_backport))
obj-$(CPTCFG_I915_VFIO_PCI) += drivers/vfio/pci/i915/
endif
else
obj-$(CPTCFG_DRM) += drivers/gpu/drm/
endif
endif

ifeq (y,$(filter y,$(CPTCFG_BUILD_DRM) $(CPTCFG_BUILD_ALL_MODULES) $(CPTCFG_BUILD_I915)))
# Telemetry
obj-$(CPTCFG_INTEL_VSEC) += drivers/platform/x86/intel/
obj-$(CPTCFG_MFD_INTEL_PMT) += drivers/platform/x86/intel/
obj-$(CPTCFG_MFD_INTEL_PMT) += drivers/mfd/

# MEI
obj-$(CPTCFG_INTEL_MEI) += drivers/misc/mei/
obj-$(CPTCFG_WATCHDOG) += drivers/watchdog/
endif
