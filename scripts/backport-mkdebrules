#!/bin/sh
#
#       Output a <> file for debian dkms file
#

PKG_NAME="intel-i915-dkms-prerelease"
PKG_VER="1.0"
REL_NAME="1"
REL_TYPE=""
DEP_PKG_NAME=""

helpFunction()
{
	echo ""
	echo "Usage: $0 -n packagename -v packageversion -r releaseversion -p prerelease/opensource"
	echo -e "\t-n packagename"
	echo -e "\t-v packageversion"
	echo -e "\t-r releaseversion"
	echo -e "\t-p Release Type : prerelease/opensource"
	exit 1
}

while getopts "n:v:r:p:" opt
do
	case "$opt" in
		n ) PKG_NAME="$OPTARG" ;;
		v ) PKG_VER="$OPTARG" ;;
		r ) REL_NAME="$OPTARG" ;;
		p ) REL_TYPE="$OPTARG" ;;
		? ) helpFunction ;; # Print helpFunction
	esac
done

sed -e '/^DEL/d' <<EOF
#!/usr/bin/make -f

# export DH_VERBOSE = 1
include /usr/share/dpkg/pkg-info.mk

DKMS_PACKAGE_NAME=$PKG_NAME
DKMS_PACKAGE_VERSION=$PKG_VER
GENERATED_DKMS_FILES= \\
    debian/$PKG_NAME.install \\
    debian/$PKG_NAME.dkms

%:
	dh \$@ --with dkms

override_dh_auto_configure:
override_dh_auto_build:
override_dh_auto_test:
override_dh_auto_install:
override_dh_auto_clean:

override_dh_clean:
	-rm -f \$(GENERATED_DKMS_FILES)
	dh_clean

# Be careful with these names, they must match the pkg name or you'll get an empty .deb
override_dh_install: debian/$PKG_NAME.install
	dh_install --exclude=.gitignore

override_dh_dkms: debian/$PKG_NAME.dkms
	dh_dkms -V \$(DKMS_PACKAGE_VERSION)
	sed '1d' debian/package.postinst.in >> debian/$PKG_NAME.postinst.debhelper
	sed '1d' debian/package.postrm.in >> debian/$PKG_NAME.prerm.debhelper

\$(GENERATED_DKMS_FILES) : \$(GENERATED_DKMS_FILES:=.in) debian/rules
	sed -e 's,@DKMS_PACKAGE_NAME@,\$(DKMS_PACKAGE_NAME),g' \\
	    -e 's,@DKMS_PACKAGE_VERSION@,\$(DKMS_PACKAGE_VERSION),g' \\
	    <\$(@:=.in) >\$@
EOF
